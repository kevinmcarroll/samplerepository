name: API Call Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  api_call_job:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: convert test cases to json
      id: convert_test_cases_to_json
      run: |
        # Path to the YAML file
        yaml_file="test_cases/Add product to cart and remove the item from the cart, then check that it was removed successfully.yaml"

        # Convert YAML to JSON using yq
        json_content=$(yq eval -o=json "$yaml_file")
        
        # Create another JSON object with an array
        additional_json='{
          "baselineMutations": []
        }'
        combined_json=$(jq --argjson content "$json_content" '.baselineMutations += [$content]' <<< "$additional_json")
    - name: Make API call with cURL
      run: |
        curl -X POST \
        -H 'Content-type: application/json' \
        -H 'auth-token: ${{secrets.TEST_SUITE_TOKEN}}' \
        --data "${combined_json}" \
        https://api.testrigor.com/api/v1/apps/NihDdLMoqyeKutE3y/retest
        
        sleep 10
        
        while true
        do
        echo " "
        echo "==================================="
        echo " Checking TestRigor retest"
        echo "==================================="
        response=$(curl -i -o - -s -X GET 'https://api.testrigor.com/api/v1/apps/NihDdLMoqyeKutE3y/status' -H 'auth-token: ${{secrets.TEST_SUITE_TOKEN}}' -H 'Accept: application/json')
          code=$(echo "$response" | grep HTTP |  awk '{print $2}')
          body=$(echo "$response" | grep status)
        echo "Status code: " $code
          echo "Response: " $body
          case $code in
            4*|5*)
              # 400 or 500 errors
              echo "Error calling API"
                                               exit 1
                                               ;;
                                               200)
          # 200: successfully finished
                                               echo "Test finished successfully"
                                               exit 0
                                               ;;
                                               227|228)
          # 227: New - 228: In progress
                                               echo "Test is not finished yet"
                                               ;;
                                               230)
          # 230: Failed
                                               echo "Test finished but failed"
                                               exit 1
                                               ;;
          *)
                                               echo "Unknown status"
                                               exit 1
                                               esac
          sleep 10
          done